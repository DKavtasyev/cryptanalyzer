package com.javarush.cryptanalyzer.kavtasyev.constants;

public class Conversation
{
	public static final String GREETINGS =
			"""
			Привет Александр! Посмотри мою программу для итогового проекта. Я старался).

			Она умеет кодировать текст в формате текстового файла .txt по шифру Цезаря с любым
			значением ключа. Для этого необходимо ввести флаг "-e".

			Так же она умеет безошибочно декодировать закодированный текст по шифру Цезаря с
			условием использования такого же алфавита. Для этого введи флаг "-d".

			Можно так же попробовать декодировать закодированный текст с помощью статистического
			анализа, но тексты требуются большие (не хватило и полмиллиона символов!), вычисления происходят
			долго (у меня - мин пять!), да и результат сомнителен. Но если ради прикола решишь попробовать -
			тогда не забудь указать флаг "-s".

			И если что, то ты вместо параметров в любой момент можешь написать команду help для вывода справки
			по структуре команд.""";

	public static final String[] CONVERSATION_ABOUT_ENCRYPT = {
			String.format("""
			Ты выбрал функцию шифрования текста. Хорошо. Теперь нужно указать путь к существующему
			текстовому файлу, который будем шифровать. Либо можно ничего не указывать, в корневой папке проекта уже
			имеется файлик по умолчанию под именем %s, над которым будем экспериментировать.""", FilePaths.INPUT_DEFAULT_FILE_FOR_ENCRYPT),

			"""
			Итак, существующий файл указан, теперь нужно указать криптографический ключ, используя который
			программа зашифрует текст из указанного файла. Можно его так же не указывать, программа сгенерирует
			подходящий ключ сама и сообщит значение.""",

			"""
			Хорошо, параметры введены корректно. Зашифрованный файл будет иметь тот же адрес и имя, но с пометкой
			_encrypted. Программа приступает к работе.
			""",

			String.format("Работа программы будет показана на файле по умолчанию %s из корневой папки проекта.", FilePaths.INPUT_DEFAULT_FILE_FOR_ENCRYPT),

			String.format("Хорошо, параметры введены корректно. Зашифрованный файл будет находиться в корневой папке проекта под\n" +
			"названием %s.", FilePaths.OUTPUT_DEFAULT_FILE_FOR_ENCRYPT)};

	public static final String[] CONVERSATION_ABOUT_BRUTE_FORCE_DECRYPT = {
			"""
			Ты выбрал функцию дешифрования методом BruteForce. Отлично. Теперь нужно указать путь
			к существующему текстовому файлу, который будем дешифровывать. Либо можно ничего не указывать и нажать enter,
			но только если ранее с помощью функции шифрования (флаг -e) был сформирован зашифрованный файл из файла
			по умолчанию. Если нет, то придётся указывать другой файл, или запускать программу на шифрование файла.""",

			"""
			Отлично, существующий файл указан, программа уже приступила к выполнению. Зашифрованный файл будет
			находиться в той же папке и иметь то же имя, но с пометкой _decrypted.
			""",

			String.format("Работа программы будет показана на примере файла %s из корневой папки проекта.", FilePaths.OUTPUT_DEFAULT_FILE_FOR_ENCRYPT),

			"Зашифрованный файл по умолчанию не найден, нужно сначала выполнить функцию шифрования файла по умолчанию.\n" +
			"Выбери путь к другому файлу.",

			String.format("Отлично, сущесвующий файл указан, программа уже приступила к выполнению. Зашифрованный файл будет\n" +
			"находиться так же в корне проекта и иметь имя %s.", FilePaths.OUTPUT_DEFAULT_FILE_FOR_BRUTEFORCE_DECRYPT)};

	public static final String[] CONVERSATION_ABOUT_STATISTICS_DECRYPT = {
			"""
			Ты выбрал функцию статистического анализа текста. Ну что ж, посмотрим, что получится.
			Теперь нужно указать путь к существующему текстовому файлу, который будем дешифровывать. Либо можно
			ничего не указывать и нажать enter, но только если ранее с помощью функции шифрования (флаг -e) был
			сформирован зашифрованный файл из файла по умолчанию. Если нет, то придётся указывать другой файл, или
			запускать программу на шифрование файла""",

			"""
			Отлично, существующий файл с зашифрованным содержимым указан, теперь необходимо указать файл,
			содержащий незашифрованный текст на русском языке, на основании которого будет происходить
			расшифровка. Или нажми Enter для расшифрования на основе готового шаблона из корневой папки проекта.""",

			"""
			Оба файла указаны, и программа приступила к выполнению. Результат будет находиться в той же папке и
			иметь то же имя, но с пометкой _decryptedstatistically.
			""",

			String.format("""
			Работа программы будет показана на примере зашифрованного файла корневой папки проекта под названием
			%s.
			""", FilePaths.INPUT_DEFAULT_FILE_FOR_STATISTICAL_DECRYPT),

			String.format("Для расшифрования принят пример текста из корневой папки проекта с названием файла %s.", FilePaths.DEFAULT_REFERENCE_FILE),

			"Зашифрованный файл по умолчанию не найден, нужно сначала выполнить функцию шифрования файла по умолчанию.\n" +
			"Выбери путь к другому файлу.",

			String.format("""
			Оба файла указаны, и программа приступила к выполнению. Результат будет находиться в корневой папке проекта
			под именем %s.
			""", FilePaths.OUTPUT_DEFAULT_FILE_FOR_STATISTICAL_DECRYPT)};

	public static final String HELP = "help";

	public static final String HELP_TEXT =
			"""
			[-e][Файл для шифрования][ключ]					команды для шифрования файлов.
			[-d][Файл для дешифрования]						команды для дешифрования файлов.
			[-s][Файл для дешифрования][Нормальный файл]	команды для статистического анализа файлов.
			[-t_code_ch_hex_dec]							вывод алфавита шифрования (служебная информация).
			""";

	public static final String PROPER_FILE_EXTENSION = ".txt";

	public static final String INEXISTENT_COMMAND = "Несуществующая команда. Повтори попытку";
	public static final String WRONG_FILE_PATH_FOR_ENCRYPT = "Это не путь к текстовому файлу. Введи пожалуйста путь к текстовому файлу, который будем зашифровывать.";
	public static final String WRONG_FILE_PATH_FOR_DECRYPT = "Это не путь к текстовому файлу. Введи пожалуйста путь к текстовому файлу, который будем расшифровывать.";
	public static final String WRONG_PATH_TO_REFERENCE_FILE = "Это не путь к текстовому файлу. Введи пожалуйста путь к незашифрованному текстовому файлу, который послужит опорным для дешифрования.";
	public static final String INEXISTENT_FILE = "Такого файла не существует. Повтори попытку";
	public static final String ENCRYPT_KEY_HAS_SET = "Шифровальный ключ сгенерирован автоматически и равен ";
	public static final String INCORRECT_KEY = "Некорректный ввод. Пожалуйста введи корректный ключ.";
	public static final String SERVICE_INFORMATION = "Печать в файл CharTable.txt служебной информации...";
}
